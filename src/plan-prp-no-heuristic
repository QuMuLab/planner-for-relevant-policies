#! /bin/bash

BASEDIR="$(dirname "$0")"

# Paths to planner components
TRANSLATE="$BASEDIR/translate/translate.py"
PREPROCESS="$BASEDIR/preprocess/preprocess"
SEARCH="$BASEDIR/search/downward"

# Check for citation request
if [ "--citation" = "$1" ]; then
  echo "
@inproceedings{muise12icapsfond,
  author = {Christian Muise and Sheila A McIlraith and J Christopher Beck},
  title = {Improved Non-deterministic Planning by Exploiting State Relevance},
  booktitle = {The 22nd International Conference on Automated Planning and Scheduling (ICAPS)},
  year = {2012},
  subdiscipline = {Artificial Intelligence},
  type = {Conference Proceedings}
}
"
  exit 1
fi


# Need to explicitly ask for GNU time (from MacPorts) on Mac OS X.
if [[ "$(uname)" == "Darwin" ]]; then
    TIME="gtime"
    if ! which $TIME >/dev/null; then
        echo "$TIME must be installed on Mac OSX (from MacPorts, perhaps) for this to work"
        exit 1
    fi
else
    TIME="command time"
fi

TIME="$TIME --output=elapsed.time --format=%S\n%U\n"

run_planner() {
    echo "1. Running translator"
    $TIME "$TRANSLATE" "$1" "$2" || exit 1
    echo "2. Running preprocessor"
    $TIME --append "$PREPROCESS" < output.sas || exit 1
    echo "3. Running search"
    shift
    shift
    PROB="$1"
    shift
    echo "$SEARCH" ipc policy-repair --plan-file "$PROB" "$@" < output
    "$SEARCH" ipc policy-repair --plan-file "$PROB" "$@" < output
}

check_input_files() {
    if [ ! -e "$1" ]; then
	echo "Domain file \"$1\" does not exist."
	exit 1
    fi
    if [ ! -e "$2" ]; then
	echo "Problem file \"$2\" does not exist."
	exit 1
    fi
}

# Make sure we have exactly 3 command line arguments
#if [[ $# != 3 ]]; then
#    echo "Usage: \"plan-ipc <domain_file> <problem_file> <result_file>\""
#    exit 1
#fi

DOMAIN="$1"
shift
PROB="$1"
shift
RESULT="$1"
shift

check_input_files "$DOMAIN" "$PROB"

# Command line arguments seem to be fine, run planner
run_planner "$DOMAIN" "$PROB" "$RESULT" "$@"

# We do not clean up temporary files here (not necessary for the IPC)
